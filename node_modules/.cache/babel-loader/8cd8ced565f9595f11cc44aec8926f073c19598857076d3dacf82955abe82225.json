{"ast":null,"code":"var _jsxFileName = \"/workspaces/Weather/src/components/CityWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getData } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CityWeather() {\n  _s();\n  const {\n    cityName\n  } = useParams();\n  const [weatherData, setWeatherData] = useState(null);\n\n  // Fetch weather data for the given city name\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await getData(cityName); // Make API request to get weather data\n        setWeatherData(response.data); // Store the weather data in state\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [cityName]); // Fetch data whenever the city name changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Weather in \", cityName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.main.temp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Weather: \", weatherData.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cloudiness: \", weatherData.clouds.all]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weatherData.main.humidity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sunrise: \", new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sunset: \", new Date(weatherData.sys.sunset * 1000).toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(CityWeather, \"raXP761M8ZqoniHWb0I90lByVP8=\", false, function () {\n  return [useParams];\n});\n_c = CityWeather;\nexport default CityWeather;\nvar _c;\n$RefreshReg$(_c, \"CityWeather\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getData","jsxDEV","_jsxDEV","CityWeather","_s","cityName","weatherData","setWeatherData","fetchData","response","data","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","main","temp","weather","description","clouds","all","humidity","Date","sys","sunrise","toLocaleTimeString","sunset","_c","$RefreshReg$"],"sources":["/workspaces/Weather/src/components/CityWeather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getData } from './api';\n\nfunction CityWeather() {\n  const { cityName } = useParams();\n  const [weatherData, setWeatherData] = useState(null);\n  \n  // Fetch weather data for the given city name\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await getData(cityName); // Make API request to get weather data\n        setWeatherData(response.data); // Store the weather data in state\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, [cityName]); // Fetch data whenever the city name changes\n\n \n  return (\n    <div>\n      <h2>Weather in {cityName}</h2>\n      {weatherData && (\n        <div>\n          <p>Temperature: {weatherData.main.temp}</p>\n          <p>Weather: {weatherData.weather[0].description}</p>\n          <p>Cloudiness: {weatherData.clouds.all}</p>\n          <p>Humidity: {weatherData.main.humidity}</p>\n          <p>Sunrise: {new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString()}</p>\n          <p>Sunset: {new Date(weatherData.sys.sunset * 1000).toLocaleTimeString()}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CityWeather;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAS,CAAC,GAAGN,SAAS,CAAC,CAAC;EAChC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACK,QAAQ,CAAC,CAAC,CAAC;QAC1CE,cAAc,CAACE,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAGhB,oBACEH,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,GAAI,aAAW,EAACT,QAAQ;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC7BZ,WAAW,iBACVJ,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,GAAG,eAAa,EAACR,WAAW,CAACa,IAAI,CAACC,IAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3ChB,OAAA;QAAAY,QAAA,GAAG,WAAS,EAACR,WAAW,CAACe,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpDhB,OAAA;QAAAY,QAAA,GAAG,cAAY,EAACR,WAAW,CAACiB,MAAM,CAACC,GAAG;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3ChB,OAAA;QAAAY,QAAA,GAAG,YAAU,EAACR,WAAW,CAACa,IAAI,CAACM,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5ChB,OAAA;QAAAY,QAAA,GAAG,WAAS,EAAC,IAAIY,IAAI,CAACpB,WAAW,CAACqB,GAAG,CAACC,OAAO,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/EhB,OAAA;QAAAY,QAAA,GAAG,UAAQ,EAAC,IAAIY,IAAI,CAACpB,WAAW,CAACqB,GAAG,CAACG,MAAM,GAAG,IAAI,CAAC,CAACD,kBAAkB,CAAC,CAAC;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACd,EAAA,CAlCQD,WAAW;EAAA,QACGJ,SAAS;AAAA;AAAAgC,EAAA,GADvB5B,WAAW;AAoCpB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}