{"ast":null,"code":"var _jsxFileName = \"/workspaces/Weather/src/components/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [city, setCity] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = event => {\n    event.preventDefault();\n    navigate(`/city/${city}`); // Navigates to the /city/:cityName route\n    updateTrending(city); // Update the trending cities\n    updateHistory(city); // Update the search history\n    setCity(''); // Clear the input field\n  };\n\n  const updateTrending = city => {\n    let trending = localStorage.getItem('trending'); // Fetch trending cities from local storage\n    trending = trending ? JSON.parse(trending) : []; // Parse the trending cities or initialize an empty array\n    if (!trending.includes(city)) {\n      trending.unshift(city); // Add the current city to the beginning of the trending cities array\n      if (trending.length > 3) {\n        trending.pop(); // Remove the last city from the trending cities array if it exceeds the limit\n      }\n\n      localStorage.setItem('trending', JSON.stringify(trending)); // Store the updated trending cities in local storage\n    }\n  };\n\n  const updateHistory = city => {\n    let history = localStorage.getItem('history'); // Fetch search history from local storage\n    history = history ? JSON.parse(history) : []; // Parse the search history or initialize an empty array\n    history.unshift(city); // Add the current city to the beginning of the search history array\n    if (history.length > 5) {\n      history.pop(); // Remove the last searched city from the search history if it exceeds the limit\n    }\n\n    localStorage.setItem('history', JSON.stringify(history)); // Store the updated search history in local storage\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: e => setCity(e.target.value),\n      placeholder: \"Search for a city...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"ZmR7QqeGlb4SxXWX9Ku3VlNvOrg=\", false, function () {\n  return [useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Search","_s","city","setCity","navigate","handleSubmit","event","preventDefault","updateTrending","updateHistory","trending","localStorage","getItem","JSON","parse","includes","unshift","length","pop","setItem","stringify","history","onSubmit","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/Weather/src/components/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Search() {\n  const [city, setCity] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    navigate(`/city/${city}`); // Navigates to the /city/:cityName route\n    updateTrending(city); // Update the trending cities\n    updateHistory(city); // Update the search history\n    setCity(''); // Clear the input field\n  };\n\n  const updateTrending = city => {\n    let trending = localStorage.getItem('trending'); // Fetch trending cities from local storage\n    trending = trending ? JSON.parse(trending) : []; // Parse the trending cities or initialize an empty array\n    if (!trending.includes(city)) {\n      trending.unshift(city); // Add the current city to the beginning of the trending cities array\n      if (trending.length > 3) {\n        trending.pop(); // Remove the last city from the trending cities array if it exceeds the limit\n      }\n      localStorage.setItem('trending', JSON.stringify(trending)); // Store the updated trending cities in local storage\n    }\n  };\n\n  const updateHistory = city => {\n    let history = localStorage.getItem('history'); // Fetch search history from local storage\n    history = history ? JSON.parse(history) : []; // Parse the search history or initialize an empty array\n    history.unshift(city); // Add the current city to the beginning of the search history array\n    if (history.length > 5) {\n      history.pop(); // Remove the last searched city from the search history if it exceeds the limit\n    }\n    localStorage.setItem('history', JSON.stringify(history)); // Store the updated search history in local storage\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={city} onChange={e => setCity(e.target.value)} placeholder=\"Search for a city...\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,YAAY,GAAGC,KAAK,IAAI;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBH,QAAQ,CAAE,SAAQF,IAAK,EAAC,CAAC,CAAC,CAAC;IAC3BM,cAAc,CAACN,IAAI,CAAC,CAAC,CAAC;IACtBO,aAAa,CAACP,IAAI,CAAC,CAAC,CAAC;IACrBC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;EACf,CAAC;;EAED,MAAMK,cAAc,GAAGN,IAAI,IAAI;IAC7B,IAAIQ,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;IACjDF,QAAQ,GAAGA,QAAQ,GAAGG,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;IACjD,IAAI,CAACA,QAAQ,CAACK,QAAQ,CAACb,IAAI,CAAC,EAAE;MAC5BQ,QAAQ,CAACM,OAAO,CAACd,IAAI,CAAC,CAAC,CAAC;MACxB,IAAIQ,QAAQ,CAACO,MAAM,GAAG,CAAC,EAAE;QACvBP,QAAQ,CAACQ,GAAG,CAAC,CAAC,CAAC,CAAC;MAClB;;MACAP,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAEN,IAAI,CAACO,SAAS,CAACV,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9D;EACF,CAAC;;EAED,MAAMD,aAAa,GAAGP,IAAI,IAAI;IAC5B,IAAImB,OAAO,GAAGV,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IAC/CS,OAAO,GAAGA,OAAO,GAAGR,IAAI,CAACC,KAAK,CAACO,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;IAC9CA,OAAO,CAACL,OAAO,CAACd,IAAI,CAAC,CAAC,CAAC;IACvB,IAAImB,OAAO,CAACJ,MAAM,GAAG,CAAC,EAAE;MACtBI,OAAO,CAACH,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB;;IACAP,YAAY,CAACQ,OAAO,CAAC,SAAS,EAAEN,IAAI,CAACO,SAAS,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC5D,CAAC;;EAED,oBACEtB,OAAA;IAAMuB,QAAQ,EAAEjB,YAAa;IAAAkB,QAAA,gBAC3BxB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEvB,IAAK;MAACwB,QAAQ,EAAEC,CAAC,IAAIxB,OAAO,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7GlC,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX;AAAChC,EAAA,CAxCQD,MAAM;EAAA,QAEIH,WAAW;AAAA;AAAAqC,EAAA,GAFrBlC,MAAM;AA0Cf,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}