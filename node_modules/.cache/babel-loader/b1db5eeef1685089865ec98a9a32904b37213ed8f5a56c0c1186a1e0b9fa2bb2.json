{"ast":null,"code":"var _jsxFileName = \"/workspaces/Weather/src/components/SearchHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchHistory() {\n  _s();\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    // Fetch search history from local storage when component loads\n    const storedHistory = localStorage.getItem('history');\n    if (storedHistory) {\n      setHistory(JSON.parse(storedHistory)); // Set the search history from local storage in state\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: history.map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: city\n      }, city, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this) // Display each searched city as a list item\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchHistory, \"PUqjgfw0ccPwtx6QxD6fWqJYeMQ=\");\n_c = SearchHistory;\nexport default SearchHistory;\nvar _c;\n$RefreshReg$(_c, \"SearchHistory\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SearchHistory","_s","history","setHistory","storedHistory","localStorage","getItem","JSON","parse","children","fileName","_jsxFileName","lineNumber","columnNumber","map","city","_c","$RefreshReg$"],"sources":["/workspaces/Weather/src/components/SearchHistory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction SearchHistory() {\n  const [history, setHistory] = useState([]);\n\n  useEffect(() => {\n    // Fetch search history from local storage when component loads\n    const storedHistory = localStorage.getItem('history');\n    if (storedHistory) {\n      setHistory(JSON.parse(storedHistory)); // Set the search history from local storage in state\n    }\n  }, []);\n\n  return (\n    <div>\n      <h2>Search History</h2>\n      <ul>\n        {history.map(city => (\n          <li key={city}>{city}</li> // Display each searched city as a list item\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default SearchHistory;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACrD,IAAIF,aAAa,EAAE;MACjBD,UAAU,CAACI,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,CAAC,CAAC,CAAC;IACzC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBd,OAAA;MAAAU,QAAA,EACGP,OAAO,CAACY,GAAG,CAACC,IAAI,iBACfhB,OAAA;QAAAU,QAAA,EAAgBM;MAAI,GAAXA,IAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,CAAC;MAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACZ,EAAA,CArBQD,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAuBtB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}