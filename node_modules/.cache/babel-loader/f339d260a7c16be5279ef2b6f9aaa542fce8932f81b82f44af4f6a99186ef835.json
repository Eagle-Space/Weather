{"ast":null,"code":"var _jsxFileName = \"/workspaces/Weather/src/components/FavoriteCities.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FavoriteCities() {\n  _s();\n  const [favoriteCities, setFavoriteCities] = useState([]);\n  const [newCity, setNewCity] = useState('');\n  useEffect(() => {\n    // Fetch favorite cities from local storage on component load\n    const storedCities = localStorage.getItem('favoriteCities');\n    if (storedCities) {\n      setFavoriteCities(JSON.parse(storedCities)); // Set the favorite cities from local storage in state\n    }\n  }, []);\n  useEffect(() => {\n    // Update local storage whenever favoriteCities state changes\n    localStorage.setItem('favoriteCities', JSON.stringify(favoriteCities)); // Store the favorite cities in local storage\n  }, [favoriteCities]); // Trigger the effect whenever the favoriteCities state changes\n\n  const handleAddCity = () => {\n    if (newCity.trim() !== '') {\n      setFavoriteCities(prevCities => [...prevCities, newCity]); // Add the new city to the favoriteCities state\n      setNewCity(''); // Clears the input \n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Favorite Cities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newCity,\n      onChange: e => setNewCity(e.target.value) // Update the newCity state \n      ,\n      placeholder: \"Enter a city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddCity,\n      children: \"Add City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: favoriteCities.map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: city\n      }, city, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) // Show each favorite city as a li item\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(FavoriteCities, \"8oeuAhUdqVVQXzknfLjjtF0MkZk=\");\n_c = FavoriteCities;\nexport default FavoriteCities;\nvar _c;\n$RefreshReg$(_c, \"FavoriteCities\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FavoriteCities","_s","favoriteCities","setFavoriteCities","newCity","setNewCity","storedCities","localStorage","getItem","JSON","parse","setItem","stringify","handleAddCity","trim","prevCities","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","city","_c","$RefreshReg$"],"sources":["/workspaces/Weather/src/components/FavoriteCities.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction FavoriteCities() {\n  const [favoriteCities, setFavoriteCities] = useState([]);\n  const [newCity, setNewCity] = useState('');\n\n  useEffect(() => {\n    // Fetch favorite cities from local storage on component load\n    const storedCities = localStorage.getItem('favoriteCities');\n    if (storedCities) {\n      setFavoriteCities(JSON.parse(storedCities)); // Set the favorite cities from local storage in state\n    }\n  }, []);\n\n  useEffect(() => {\n    // Update local storage whenever favoriteCities state changes\n    localStorage.setItem('favoriteCities', JSON.stringify(favoriteCities)); // Store the favorite cities in local storage\n  }, [favoriteCities]); // Trigger the effect whenever the favoriteCities state changes\n\n  const handleAddCity = () => {\n    if (newCity.trim() !== '') {\n      setFavoriteCities(prevCities => [...prevCities, newCity]); // Add the new city to the favoriteCities state\n      setNewCity(''); // Clears the input \n    }\n  };\n\n  return (\n    <div>\n      <h2>Favorite Cities</h2>\n      <input\n        type=\"text\"\n        value={newCity}\n        onChange={e => setNewCity(e.target.value)} // Update the newCity state \n        placeholder=\"Enter a city\"\n      />\n      <button onClick={handleAddCity}>Add City</button>\n      <ul>\n        {favoriteCities.map(city => (\n          <li key={city}>{city}</li> // Show each favorite city as a li item\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default FavoriteCities;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAC3D,IAAIF,YAAY,EAAE;MAChBH,iBAAiB,CAACM,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC,CAAC,CAAC,CAAC;IAC/C;EACF,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACd;IACAU,YAAY,CAACI,OAAO,CAAC,gBAAgB,EAAEF,IAAI,CAACG,SAAS,CAACV,cAAc,CAAC,CAAC,CAAC,CAAC;EAC1E,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEtB,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIT,OAAO,CAACU,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzBX,iBAAiB,CAACY,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAEX,OAAO,CAAC,CAAC,CAAC,CAAC;MAC3DC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;;EAED,oBACEN,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAElB,OAAQ;MACfmB,QAAQ,EAAEC,CAAC,IAAInB,UAAU,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;MAAA;MAC3CI,WAAW,EAAC;IAAc;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACFrB,OAAA;MAAQ4B,OAAO,EAAEd,aAAc;MAAAG,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDrB,OAAA;MAAAiB,QAAA,EACGd,cAAc,CAAC0B,GAAG,CAACC,IAAI,iBACtB9B,OAAA;QAAAiB,QAAA,EAAgBa;MAAI,GAAXA,IAAI;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,CAAC;MAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnB,EAAA,CAzCQD,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AA2CvB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}